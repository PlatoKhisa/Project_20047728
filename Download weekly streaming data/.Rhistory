library(modelsummary)
library(fixest)
library(ggplot2)
library(pastecs)
library(Hmisc)
library(lmtest)
#loading the data
sg_data <- read.csv(file='weeklystreams_sg.csv')
hk_data <- read.csv(file='weeklystreams_hk.csv')
#plotting standardized stream data to observe the streaming trend between Hongkong and Singapore
parallel_trend <- ggplot()+
geom_line(data=sg_data, aes(Week, sdstreams,group=1),color='green')+
geom_line(data=hk_data, aes(Week, sdstreams,group=1),color='red')+
geom_vline(data=sg_data,aes(xintercept= 93))+
labs(x='Number of week', y='Percentage')
parallel_trend
#merging the streaming data into a single dataframe
combined_data <- rbind(sg_data, hk_data)
combined_data %<>%
mutate(Country= ifelse(row_number()>105, 'HK', 'SG'))
typeof(combined_data$Date)
write.csv(combined_data, 'combined.csv')
spotify_hk<- readRDS("spotifyRAW_hk.rds")
dim(spotify)
#data cleaning
spotify_hk %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_hk$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
#Aggregating the streaming data for each week
total_streams_hk<- aggregate(Streams ~ Date, spotify_hk, sum)
total_streams_hk %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
#exporting the aggregated data into a csv file
write.csv(total_streams_hk, 'weeklystreams_hk.csv')
setwd("C:/Users/Dell/Desktop/PROJECT FINAL/Download data and exploratory analysis")
spotify_hk<- readRDS("spotifyRAW_hk.rds")
dim(spotify)
#data cleaning
spotify_hk %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_hk$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
#Aggregating the streaming data for each week
total_streams_hk<- aggregate(Streams ~ Date, spotify_hk, sum)
total_streams_hk %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
#exporting the aggregated data into a csv file
write.csv(total_streams_hk, 'weeklystreams_hk.csv')
spotify_hk<- readRDS("spotifyRAW_hk.rds")
dim(spotify)
spotify_hk<- readRDS("spotifyRAW_hk.rds")
dim(spotify_hk)
spotify_hk %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_hk$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
library(rvest)
library(tidyverse)
library(magrittr)
library(scales)
library(knitr)
library(lubridate)
library(ggrepel)
spotify_hk %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_hk$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
total_streams_hk<- aggregate(Streams ~ Date, spotify_hk, sum)
total_streams_hk %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
#exporting the aggregated data into a csv file
write.csv(total_streams_hk, 'weeklystreams_hk.csv')
spotify_se<- map_df(finalurl, SpotifyScrape)
saveRDS(spotify_se, "spotifyRAW_se.rds")
spotify_sg<- readRDS("spotifyRAW_sg.rds")
dim(spotify_sg)
#data cleaning
spotify_sg %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_se$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
#Aggregating the streaming data for each week
total_streams_sg<- aggregate(Streams ~ Date, spotify_se, sum)
total_streams_sg %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
#exporting the aggregated data into a csv file
write.csv(total_streams_sg, 'weeklystreams_sg.csv')
setwd("C:/Users/Dell/Desktop/PROJECT FINAL/Download data and exploratory analysis")
spotify_sg<- map_df(finalurl, SpotifyScrape)
saveRDS(spotify_sg, "spotifyRAW_sg.rds")
spotify_sg<- readRDS("spotifyRAW_sg.rds")
dim(spotify_sg)
#data cleaning
spotify_sg %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_se$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
#Aggregating the streaming data for each week
total_streams_sg<- aggregate(Streams ~ Date, spotify_se, sum)
total_streams_sg %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
#exporting the aggregated data into a csv file
write.csv(total_streams_sg, 'weeklystreams_sg.csv')
spotify_sg<- map_df(finalurl, SpotifyScrape)
saveRDS(spotify_sg, "spotifyRAW_sg.rds")
spotify_sg<- readRDS("spotifyRAW_sg.rds")
dim(spotify_sg)
spotify_sg %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_se$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
spotify_sg %<>%
mutate( Artist = gsub("by ", "", Artist), #gsub perform replacement of the first and all matches respectively
Streams = gsub(",", "", Streams),
Streams = as.numeric(Streams),
Date = as.Date(spotify_sg$Date, "%m/%d/%Y"),
WeekDay = wday(Date, label = TRUE),#LUBRIDATE.PKG:Get days component of a date-time
Month = month(Date, label = TRUE)
) %>%
print()
total_streams_sg<- aggregate(Streams ~ Date, spotify_se, sum)
total_streams_sg %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
total_streams_sg<- aggregate(Streams ~ Date, spotify_sg, sum)
total_streams_sg %<>%
mutate(Week= cut.Date(Date, breaks='1 week', labels=FALSE))%<>%
arrange(Date)
write.csv(total_streams_sg, 'weeklystreams_sg.csv')
library(modelsummary)
library(fixest)
library(ggplot2)
library(pastecs)
library(Hmisc)
library(lmtest)
#loading the data
sg_data <- read.csv(file='weeklystreams_sg.csv')
hk_data <- read.csv(file='weeklystreams_hk.csv')
#plotting standardized stream data to observe the streaming trend between Hongkong and Singapore
parallel_trend <- ggplot()+
geom_line(data=sg_data, aes(Week, sdstreams,group=1),color='green')+
geom_line(data=hk_data, aes(Week, sdstreams,group=1),color='red')+
geom_vline(data=sg_data,aes(xintercept= 93))+
labs(x='Number of week', y='Percentage')
parallel_trend
#merging the streaming data into a single dataframe
combined_data <- rbind(sg_data, hk_data)
combined_data %<>%
mutate(Country= ifelse(row_number()>105, 'HK', 'SG'))
typeof(combined_data$Date)
write.csv(combined_data, 'combined.csv')
